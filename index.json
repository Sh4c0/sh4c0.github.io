[{"categories":["2021/7"],"content":"传送门 ","date":"2021-07-21","objectID":"/posts/cf1385e/:0:0","tags":["codeforces","Topological sorting"],"title":"Codeforces1385E Directing Edges","uri":"/posts/cf1385e/"},{"categories":["2021/7"],"content":"题意 给一个图包含有向边和无向边，将所有无向边改为有向边并且使图中不存在环 ","date":"2021-07-21","objectID":"/posts/cf1385e/:0:1","tags":["codeforces","Topological sorting"],"title":"Codeforces1385E Directing Edges","uri":"/posts/cf1385e/"},{"categories":["2021/7"],"content":"思路 首先删除掉所有有向边，通过拓扑排序判断是否有环，如果不存在环，则将无向边改为由拓扑序小的点指向拓扑序大的点的有向边 ","date":"2021-07-21","objectID":"/posts/cf1385e/:0:2","tags":["codeforces","Topological sorting"],"title":"Codeforces1385E Directing Edges","uri":"/posts/cf1385e/"},{"categories":["2021/7"],"content":"代码 #include\u003cbits/stdc++.h\u003eusing namespace std; #define endl '\\n' #define x first #define y second typedef pair\u003cint,int\u003e Pii; const int maxn=2e5+5; int n,m,rk[maxn]; vector\u003cPii\u003e e; void init(){} vector\u003cint\u003e g[maxn]; vector\u003cint\u003e topo; int vis[maxn]; bool dfs(int u){ vis[u]=-1; for(auto v:g[u]){ if(vis[v]\u003c0)return 0; else if(!vis[v]\u0026\u0026!dfs(v))return 0; } vis[u]=1; topo.push_back(u); return 1; } bool toposort(){ topo.clear(); for(int i=0;i\u003c=n;i++)vis[i]=0; for(int u=1;u\u003c=n;u++){ if(!vis[u]\u0026\u0026!dfs(u))return 0; } reverse(topo.begin(),topo.end()); return 1; } inline void solve(){ cin\u003e\u003en\u003e\u003em; for(int i=1;i\u003c=n;i++){ vis[i]=0; g[i].clear(); } e.clear(); for(int i=0;i\u003cm;i++){ int u,v,w; cin\u003e\u003ew\u003e\u003eu\u003e\u003ev; if(w){ g[u].push_back(v); in[v]++; }else e.push_back({u,v}); } if(!toposort()){ cout\u003c\u003c\"NO\"\u003c\u003cendl; return ; } for(int i=0;i\u003ctopo.size();i++)rk[topo[i]]=i; cout\u003c\u003c\"YES\"\u003c\u003cendl; for(int u=1;u\u003c=n;u++){ for(auto v:g[u])cout\u003c\u003cu\u003c\u003c\" \"\u003c\u003cv\u003c\u003cendl; } for(auto p:e){ if(rk[p.x]\u003crk[p.y])cout\u003c\u003cp.x\u003c\u003c\" \"\u003c\u003cp.y\u003c\u003cendl; else cout\u003c\u003cp.y\u003c\u003c\" \"\u003c\u003cp.x\u003c\u003cendl; } } int main(){ ios::sync_with_stdio(false); cin.tie(0); int __=1; cin\u003e\u003e__; while(__--){ solve(); } return 0; } #include\u003cbits/stdc++.h\u003eusing namespace std; #define endl '\\n' #define x first #define y second typedef pair\u003cint,int\u003e Pii; const int maxn=2e5+5; int n,m,rk[maxn]; vector\u003cPii\u003e e; void init(){} vector\u003cint\u003e g[maxn]; vector\u003cint\u003e topo; int in[maxn]; bool toposort(){ topo.clear(); for(int u=1;u\u003c=n;u++){ for(auto v:g[u])in[v]++; } int cnt=0; queue\u003cint\u003e q; for(int u=1;u\u003c=n;u++)if(!in[u])q.push(u); while(q.size()){ int u=q.front(); q.pop(); cnt++; topo.push_back(u); for(auto v:g[u])if(!--in[v])q.push(v); } return cnt==n; } inline void solve(){ cin\u003e\u003en\u003e\u003em; for(int i=1;i\u003c=n;i++){ in[i]=0; g[i].clear(); } e.clear(); for(int i=0;i\u003cm;i++){ int u,v,w; cin\u003e\u003ew\u003e\u003eu\u003e\u003ev; if(w){ g[u].push_back(v); }else e.push_back({u,v}); } if(!toposort()){ cout\u003c\u003c\"NO\"\u003c\u003cendl; return ; } for(int i=0;i\u003ctopo.size();i++)rk[topo[i]]=i; cout\u003c\u003c\"YES\"\u003c\u003cendl; for(int u=1;u\u003c=n;u++){ for(auto v:g[u])cout\u003c\u003cu\u003c\u003c\" \"\u003c\u003cv\u003c\u003cendl; } for(auto p:e){ if(rk[p.x]\u003crk[p.y])cout\u003c\u003cp.x\u003c\u003c\" \"\u003c\u003cp.y\u003c\u003cendl; else cout\u003c\u003cp.y\u003c\u003c\" \"\u003c\u003cp.x\u003c\u003cendl; } } int main(){ ios::sync_with_stdio(false); cin.tie(0); int __=1; cin\u003e\u003e__; while(__--){ solve(); } return 0; } ","date":"2021-07-21","objectID":"/posts/cf1385e/:0:3","tags":["codeforces","Topological sorting"],"title":"Codeforces1385E Directing Edges","uri":"/posts/cf1385e/"},{"categories":["2021/7"],"content":"小结 很久没有刷过图论，通过这个题算是复习了一下拓扑排序 ","date":"2021-07-21","objectID":"/posts/cf1385e/:0:4","tags":["codeforces","Topological sorting"],"title":"Codeforces1385E Directing Edges","uri":"/posts/cf1385e/"},{"categories":null,"content":"Z​K​J​ ❤️ ​LY 2021.4.25 小傻子找我表白 2021.5.8 收到小傻子的小铃铛 2021.5.20 收到小傻子的花 2021.5.21 一起看电影，然后就在一起啦 2021.5.22 😘亲亲啦 2021.6.12 因为搬宿舍所以第一次和小傻子出去住啦 2021.7.2 有小傻子的第一个生日 2021.7.5 小傻子考完试回家了，第一次分开 2021.7.20 暑假的第一次见面，开心！（小别胜新婚哈哈哈） ","date":"2021-07-19","objectID":"/love/:0:0","tags":null,"title":"Love","uri":"/love/"},{"categories":null,"content":"🎉 你好呀，这里是ShacozzZ的小站。 本站主要用于记录💻 学习的笔记、🎈 ACM生涯的尾声和🌈 生活的琐碎 目前是就读于🏫 南华大学的👨‍🎓 大三学生 主要的爱好有 🧑‍❤️‍💋‍🧑 和喜欢的人散步 💡 刷算法题 🎮 打游戏 ","date":"2021-07-19","objectID":"/about/:0:0","tags":null,"title":"About Me","uri":"/about/"},{"categories":["2021/7"],"content":"传送门 ","date":"2021-07-18","objectID":"/posts/cf1200e/:0:0","tags":["codeforces","stringhash"],"title":"Codeforces1200E Compress Words","uri":"/posts/cf1200e/"},{"categories":["2021/7"],"content":"题意 给n个字符串合并成一个串并且合并时消除后一个串最长的与前一个串后缀相同的前缀，即ab与bc合并为abc ","date":"2021-07-18","objectID":"/posts/cf1200e/:0:1","tags":["codeforces","stringhash"],"title":"Codeforces1200E Compress Words","uri":"/posts/cf1200e/"},{"categories":["2021/7"],"content":"思路 将字符串hash之后暴力寻找最长的相同前后缀即可。由于codeforces的数据还是比较强的，为了防止hash碰撞，有两种解决方法 双模数hash 在找到相同的hash值之后暴力判断该前缀和该后缀是否真正相同 ","date":"2021-07-18","objectID":"/posts/cf1200e/:0:2","tags":["codeforces","stringhash"],"title":"Codeforces1200E Compress Words","uri":"/posts/cf1200e/"},{"categories":["2021/7"],"content":"代码 #include\u003cbits/stdc++.h\u003eusing namespace std; #define endl '\\n' #define x first #define y second typedef unsigned long long ull; typedef pair\u003cull,ull\u003e P; const int md1=998244353; const int md2=1e9+7; const ull B1=233,B2=131; const int maxn=1e6+5; int n,m; string t,s; vector\u003cP\u003e pre,ss,tt; void init(){ pre.push_back(P(1,1)); for(int i=1;i\u003cmaxn;i++)pre.push_back(P(pre[i-1].x*B1%md1,pre[i-1].y*B2%md2)); } inline void solve(){ cin\u003e\u003en; t.push_back('*'); tt.push_back(P(0,0)); while(cin\u003e\u003es){ ss.clear(); ss.push_back(P(0,0)); for(int i=1;i\u003c=s.size();i++)ss.push_back(P((ss[i-1].x*B1+s[i-1])%md1,(ss[i-1].y*B2+s[i-1])%md2)); int len=0; for(int i=min(t.size(),s.size());i\u003e0;i--){ if((tt[t.size()-1].x+md1-tt[t.size()-i-1].x*pre[i].x%md1)%md1==ss[i].x \u0026\u0026(tt[t.size()-1].y+md2-tt[t.size()-i-1].y*pre[i].y%md2)%md2==ss[i].y){ len=i; break; } } for(int i=len,j=t.size();i\u003cs.size();i++,j++){ t.push_back(s[i]); tt.push_back(P((tt[j-1].x*B1+s[i])%md1,(tt[j-1].y*B2+s[i])%md2)); } } for(int i=1;i\u003ct.size();i++)cout\u003c\u003ct[i]; cout\u003c\u003cendl; } int main(){ ios::sync_with_stdio(false); cin.tie(0); int __=1; init(); while(__--){ solve(); } return 0; } #include\u003cbits/stdc++.h\u003eusing namespace std; #define endl '\\n' #define x first #define y second typedef unsigned long long ull; const ull B=233; int n,m; string t,s; vector\u003cull\u003e pre,ss,tt; void init(){ pre.push_back(1); for(int i=1;i\u003cmaxn;i++)pre.push_back(pre[i-1]*B); } inline void solve(){ cin\u003e\u003en; t.push_back('*'); tt.push_back(0); while(cin\u003e\u003es){ ss.clear(); ss.push_back(0); for(int i=1;i\u003c=s.size();i++)ss.push_back(ss[i-1]*B+s[i-1]); int len=0; for(int i=min(t.size(),s.size());i\u003e0;i--){ if(tt[t.size()-1]-tt[t.size()-i-1]*pre[i]==ss[i]){ bool ok=1; for(int j=t.size()-i,k=0;j\u003ct.size()\u0026\u0026k\u003ci;j++,k++){ if(t[j]!=s[k]){ ok=0; break; } } if(ok){ len=i; break; } } } for(int i=len,j=t.size();i\u003cs.size();i++,j++){ t.push_back(s[i]); tt.push_back(tt[j-1]*B+s[i]); } } for(int i=1;i\u003ct.size();i++)cout\u003c\u003ct[i]; cout\u003c\u003cendl; } int main(){ ios::sync_with_stdio(false); cin.tie(0); int __=1; init(); while(__--){ solve(); } return 0; } ","date":"2021-07-18","objectID":"/posts/cf1200e/:0:3","tags":["codeforces","stringhash"],"title":"Codeforces1200E Compress Words","uri":"/posts/cf1200e/"},{"categories":["2021/7"],"content":"小结 不得不吐槽Codeforces的数据太狠了（可想当时比赛的时候被hack了多少人），主要注意的是unsigned long long 自然溢出这种hash方式貌似很容易被卡 ","date":"2021-07-18","objectID":"/posts/cf1200e/:0:4","tags":["codeforces","stringhash"],"title":"Codeforces1200E Compress Words","uri":"/posts/cf1200e/"}]